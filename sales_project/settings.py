"""
Django settings for sales_project project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o9d76l+p#vrgs6r601a=w6pgzi56i-vik9z(g+1qi(k3-)1n+w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    '192.168.0.54',  # 현재 컴퓨터의 내부 IP
    '192.168.0.1',   # 게이트웨이
    # 필요한 경우 사내 다른 IP들을 개별적으로 추가
    # '192.168.0.10',
    # '192.168.0.20',
    '*',  # 모바일 테스트를 위해 임시로 모든 호스트 허용 (운영 환경에서는 제거 필요)
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'reporting',  # 새로 추가한 앱
    'tailwind',   # django-tailwind 앱 추가
    'theme',      # Tailwind 테마 앱 추가 (init 후 생성되므로 임시 주석 처리)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'reporting.middleware.PerformanceMonitoringMiddleware',  # 성능 모니터링 미들웨어 추가
]

ROOT_URLCONF = 'sales_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sales_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # 정적 파일 수집 디렉토리

# Additional locations of static files
STATICFILES_DIRS = [
    BASE_DIR / "theme" / "static",  # theme 앱의 static 폴더
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'reporting:login' # reporting 앱의 login URL을 사용하도록 변경
LOGIN_REDIRECT_URL = 'reporting:dashboard' # 로그인 후 대시보드로 리디렉션
LOGOUT_REDIRECT_URL = 'reporting:login' # 로그아웃 후 로그인 페이지로 리디렉션

# Django Messages 설정
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

# 로깅 설정
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {name} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '[{levelname}] {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'reporting': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Tailwind CSS settings
TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
]

NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"

# CSRF 설정 (모바일 친화적)
CSRF_COOKIE_SECURE = False  # 개발 환경에서는 False (HTTPS 필요 없음)
CSRF_COOKIE_HTTPONLY = False  # JavaScript에서 접근 가능하도록
CSRF_COOKIE_SAMESITE = 'Lax'  # 크로스 사이트 요청에 대해 완화된 설정
CSRF_TRUSTED_ORIGINS = [
    'http://127.0.0.1:8000',
    'http://localhost:8000',
    'http://192.168.0.54:8000',
    'http://192.168.1.*:8000',  # 일반적인 내부 네트워크
    'http://192.168.0.*:8000',  # 현재 네트워크
]

# 세션 설정 (모바일 친화적)
SESSION_COOKIE_SECURE = False  # 개발 환경에서는 False
SESSION_COOKIE_HTTPONLY = True  # 보안을 위해 True 유지
SESSION_COOKIE_SAMESITE = 'Lax'  # 크로스 사이트 요청에 대해 완화된 설정
SESSION_COOKIE_AGE = 86400  # 24시간 (모바일에서 자주 로그아웃되는 것 방지)
SESSION_SAVE_EVERY_REQUEST = True  # 매 요청마다 세션 갱신

# 모바일 디버깅을 위한 추가 설정
USE_TZ = True
TIME_ZONE = 'Asia/Seoul'  # 한국 시간대로 변경
LANGUAGE_CODE = 'ko-kr'  # 한국어로 변경
