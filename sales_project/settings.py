""""""

Django settings for sales_project project.Django settings for sales_project project.

"""

Generated by 'django-admin startproject' using Django 5.2.3.

import os

For more information on this file, see

# Railway 환경 감지 - 프로덕션 설정 완전 전환https://docs.djangoproject.com/en/5.2/topics/settings/

if os.environ.get('RAILWAY_ENVIRONMENT') or os.environ.get('DATABASE_URL'):

    # Railway 환경: settings_production.py의 모든 설정 사용For the full list of settings and their values, see

    from sales_project.settings_production import *https://docs.djangoproject.com/en/5.2/ref/settings/

    """

# 로컬 개발 환경: 아래 설정 사용

elif not ('RAILWAY_ENVIRONMENT' in os.environ or 'DATABASE_URL' in os.environ):import os

    from pathlib import Pathimport sys

    

    BASE_DIR = Path(__file__).resolve().parent.parent# Railway 환경 감지 - 프로덕션 설정으로 완전 전환

    if os.environ.get('RAILWAY_ENVIRONMENT') or os.environ.get('DATABASE_URL'):

    SECRET_KEY = 'django-insecure-o9d76l+p#vrgs6r601a=w6pgzi56i-vik9z(g+1qi(k3-)1n+w'    print("🚂 Railway environment detected - loading production settings")

        from sales_project.settings_production import *

    DEBUG = True    # settings_production을 사용하므로 이 파일의 나머지 설정은 무시됨

        # 모듈 로드를 여기서 중단

    ALLOWED_HOSTS = [    sys.modules[__name__].__dict__.update(locals())

        '127.0.0.1',else:

        'localhost',    # 로컬 개발 환경 설정만 실행

        '192.168.0.54',    from pathlib import Path

        '192.168.0.1',

        '*',# Build paths inside the project like this: BASE_DIR / 'subdir'.

    ]BASE_DIR = Path(__file__).resolve().parent.parent

    

    INSTALLED_APPS = [

        'django.contrib.admin',# Quick-start development settings - unsuitable for production

        'django.contrib.auth',# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

        'django.contrib.contenttypes',

        'django.contrib.sessions',# SECURITY WARNING: keep the secret key used in production secret!

        'django.contrib.messages',SECRET_KEY = 'django-insecure-o9d76l+p#vrgs6r601a=w6pgzi56i-vik9z(g+1qi(k3-)1n+w'

        'django.contrib.staticfiles',

        'reporting',# SECURITY WARNING: don't run with debug turned on in production!

        'tailwind',DEBUG = True

        'theme',

    ]ALLOWED_HOSTS = [

        '127.0.0.1',

    MIDDLEWARE = [    'localhost',

        'django.middleware.security.SecurityMiddleware',    '192.168.0.54',  # 현재 컴퓨터의 내부 IP

        'django.contrib.sessions.middleware.SessionMiddleware',    '192.168.0.1',   # 게이트웨이

        'django.middleware.common.CommonMiddleware',    # 필요한 경우 사내 다른 IP들을 개별적으로 추가

        'django.middleware.csrf.CsrfViewMiddleware',    # '192.168.0.10',

        'django.contrib.auth.middleware.AuthenticationMiddleware',    # '192.168.0.20',

        'django.contrib.messages.middleware.MessageMiddleware',    '*',  # 모바일 테스트를 위해 임시로 모든 호스트 허용 (운영 환경에서는 제거 필요)

        'django.middleware.clickjacking.XFrameOptionsMiddleware',]

        'reporting.middleware.CompanyFilterMiddleware',

        'reporting.middleware.PerformanceMonitoringMiddleware',

    ]# Application definition

    

    ROOT_URLCONF = 'sales_project.urls'INSTALLED_APPS = [

        'django.contrib.admin',

    TEMPLATES = [    'django.contrib.auth',

        {    'django.contrib.contenttypes',

            'BACKEND': 'django.template.backends.django.DjangoTemplates',    'django.contrib.sessions',

            'DIRS': [],    'django.contrib.messages',

            'APP_DIRS': True,    'django.contrib.staticfiles',

            'OPTIONS': {    'reporting',  # 새로 추가한 앱

                'context_processors': [    'tailwind',   # django-tailwind 앱 추가

                    'django.template.context_processors.request',    'theme',      # Tailwind 테마 앱 추가 (init 후 생성되므로 임시 주석 처리)

                    'django.contrib.auth.context_processors.auth',]

                    'django.contrib.messages.context_processors.messages',

                ],MIDDLEWARE = [

            },    'django.middleware.security.SecurityMiddleware',

        },    'django.contrib.sessions.middleware.SessionMiddleware',

    ]    'django.middleware.common.CommonMiddleware',

        'django.middleware.csrf.CsrfViewMiddleware',

    WSGI_APPLICATION = 'sales_project.wsgi.application'    'django.contrib.auth.middleware.AuthenticationMiddleware',

        'django.contrib.messages.middleware.MessageMiddleware',

    DATABASES = {    'django.middleware.clickjacking.XFrameOptionsMiddleware',

        'default': {    'reporting.middleware.CompanyFilterMiddleware',  # 회사 필터링 미들웨어 추가

            'ENGINE': 'django.db.backends.sqlite3',    'reporting.middleware.PerformanceMonitoringMiddleware',  # 성능 모니터링 미들웨어 추가

            'NAME': BASE_DIR / 'db.sqlite3',]

        }

    }ROOT_URLCONF = 'sales_project.urls'

    

    AUTH_PASSWORD_VALIDATORS = [TEMPLATES = [

        {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},    {

        {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},        'DIRS': [],

        {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},        'APP_DIRS': True,

    ]        'OPTIONS': {

                'context_processors': [

    LANGUAGE_CODE = 'ko-kr'                'django.template.context_processors.request',

    TIME_ZONE = 'Asia/Seoul'                'django.contrib.auth.context_processors.auth',

    USE_I18N = True                'django.contrib.messages.context_processors.messages',

    USE_TZ = True            ],

            },

    STATIC_URL = 'static/'    },

    STATIC_ROOT = BASE_DIR / 'staticfiles']

    STATICFILES_DIRS = [BASE_DIR / "theme" / "static"]

    WSGI_APPLICATION = 'sales_project.wsgi.application'

    MEDIA_URL = '/media/'

    MEDIA_ROOT = BASE_DIR / 'media'

    # Database

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

    

    LOGIN_URL = 'reporting:login'DATABASES = {

    LOGIN_REDIRECT_URL = 'reporting:dashboard'    'default': {

    LOGOUT_REDIRECT_URL = 'reporting:login'        'ENGINE': 'django.db.backends.sqlite3',

            'NAME': BASE_DIR / 'db.sqlite3',

    from django.contrib.messages import constants as messages    }

    MESSAGE_TAGS = {}

        messages.DEBUG: 'debug',

        messages.INFO: 'info',

        messages.SUCCESS: 'success',# Password validation

        messages.WARNING: 'warning',# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

        messages.ERROR: 'error',

    }AUTH_PASSWORD_VALIDATORS = [

        {

    LOGGING = {        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',

        'version': 1,    },

        'disable_existing_loggers': False,    {

        'formatters': {        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',

            'verbose': {    },

                'format': '[{levelname}] {asctime} {name} {process:d} {thread:d} {message}',    {

                'style': '{',        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',

            },    },

        },    {

        'handlers': {        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',

            'console': {    },

                'class': 'logging.StreamHandler',]

                'formatter': 'verbose',

            },

        },# Internationalization

        'loggers': {# https://docs.djangoproject.com/en/5.2/topics/i18n/

            'reporting': {

                'handlers': ['console'],LANGUAGE_CODE = 'en-us'

                'level': 'INFO',

                'propagate': False,TIME_ZONE = 'UTC'

            },

            'django': {USE_I18N = True

                'handlers': ['console'],

                'level': 'INFO',USE_TZ = True

                'propagate': False,

            },

        },# Static files (CSS, JavaScript, Images)

    }# https://docs.djangoproject.com/en/5.2/howto/static-files/

    

    TAILWIND_APP_NAME = 'theme'STATIC_URL = 'static/'

    INTERNAL_IPS = ["127.0.0.1"]STATIC_ROOT = BASE_DIR / 'staticfiles'  # 정적 파일 수집 디렉토리

    NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"

    # Additional locations of static files

    CSRF_COOKIE_SECURE = FalseSTATICFILES_DIRS = [

    CSRF_COOKIE_HTTPONLY = False    BASE_DIR / "theme" / "static",  # theme 앱의 static 폴더

    CSRF_COOKIE_SAMESITE = 'Lax']

    CSRF_TRUSTED_ORIGINS = [

        'http://127.0.0.1:8000',# Media files (user uploaded files)

        'http://localhost:8000',MEDIA_URL = '/media/'

        'http://192.168.0.54:8000',MEDIA_ROOT = BASE_DIR / 'media'  # 미디어 파일 저장 디렉토리

        'http://192.168.1.*:8000',

        'http://192.168.0.*:8000',# Default primary key field type

        'https://web-production-5096.up.railway.app',# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

        'https://*.railway.app',

        'https://*.up.railway.app',DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

    ]

    LOGIN_URL = 'reporting:login' # reporting 앱의 login URL을 사용하도록 변경

    SESSION_COOKIE_SECURE = FalseLOGIN_REDIRECT_URL = 'reporting:dashboard' # 로그인 후 대시보드로 리디렉션

    SESSION_COOKIE_HTTPONLY = TrueLOGOUT_REDIRECT_URL = 'reporting:login' # 로그아웃 후 로그인 페이지로 리디렉션

    SESSION_COOKIE_SAMESITE = 'Lax'

    SESSION_COOKIE_AGE = 86400# Django Messages 설정

    SESSION_SAVE_EVERY_REQUEST = Truefrom django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

# 로깅 설정
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {name} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '[{levelname}] {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'reporting': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Tailwind CSS settings
TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
]

NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"

# CSRF 설정 (모바일 친화적)
CSRF_COOKIE_SECURE = False  # 개발 환경에서는 False (HTTPS 필요 없음)
CSRF_COOKIE_HTTPONLY = False  # JavaScript에서 접근 가능하도록
CSRF_COOKIE_SAMESITE = 'Lax'  # 크로스 사이트 요청에 대해 완화된 설정
CSRF_TRUSTED_ORIGINS = [
    'http://127.0.0.1:8000',
    'http://localhost:8000',
    'http://192.168.0.54:8000',
    'http://192.168.1.*:8000',  # 일반적인 내부 네트워크
    'http://192.168.0.*:8000',  # 현재 네트워크
    'https://web-production-5096.up.railway.app',  # Railway URL 추가
    'https://*.railway.app',
    'https://*.up.railway.app',
]

# 세션 설정 (모바일 친화적)
SESSION_COOKIE_SECURE = False  # 개발 환경에서는 False
SESSION_COOKIE_HTTPONLY = True  # 보안을 위해 True 유지
SESSION_COOKIE_SAMESITE = 'Lax'  # 크로스 사이트 요청에 대해 완화된 설정
SESSION_COOKIE_AGE = 86400  # 24시간 (모바일에서 자주 로그아웃되는 것 방지)
SESSION_SAVE_EVERY_REQUEST = True  # 매 요청마다 세션 갱신

# 모바일 디버깅을 위한 추가 설정
USE_TZ = True
TIME_ZONE = 'Asia/Seoul'  # 한국 시간대로 변경
LANGUAGE_CODE = 'ko-kr'  # 한국어로 변경
